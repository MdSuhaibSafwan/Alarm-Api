# Generated by Django 3.2.3 on 2021-06-27 06:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import macaddress.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acknowledgement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=50000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlarmSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('critical_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of critical alarms')),
                ('major_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of major alarms')),
                ('minor_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of minor alarms')),
            ],
            options={
                'db_table': 'alarm_snapshot',
            },
        ),
        migrations.CreateModel(
            name='ManualConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.PositiveIntegerField(blank=True, help_text='in meters', null=True)),
            ],
            options={
                'db_table': 'manual_connection',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_coord', models.FloatField(blank=True, null=True, verbose_name='x-coordinate')),
                ('y_coord', models.FloatField(blank=True, null=True, verbose_name='y-coordinate')),
                ('parent_connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child', to='api.manualconnection')),
            ],
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TopologyConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'topology_connection',
            },
        ),
        migrations.CreateModel(
            name='TopologySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('site_code', models.CharField(blank=True, max_length=100, null=True)),
                ('gateway_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'topology_snapshot',
            },
        ),
        migrations.CreateModel(
            name='UnmanagedDevice',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.node')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.IntegerField(choices=[(None, '(Unknown)'), (1, 'Active'), (0, 'Archived')], default=1, verbose_name='Status')),
            ],
            options={
                'db_table': 'unmanaged_devices',
            },
            bases=('api.node',),
        ),
        migrations.CreateModel(
            name='TopologyNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hw_id', macaddress.fields.MACAddressField(integer=False, max_length=17, verbose_name='Hardware id')),
                ('x_coord', models.FloatField(verbose_name='x-coordinate')),
                ('y_coord', models.FloatField(verbose_name='y-coordinate')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topology_records', to='api.node')),
                ('parent_connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child', to='api.topologyconnection')),
                ('snapshot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='api.topologysnapshot')),
            ],
            options={
                'db_table': 'topology_node',
            },
        ),
        migrations.AddField(
            model_name='topologyconnection',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='child_connections', to='api.topologynode'),
        ),
        migrations.AddField(
            model_name='manualconnection',
            name='parent_node_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_connections', to='api.node'),
        ),
        migrations.CreateModel(
            name='LeakyFeederGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='IP address or hostname', max_length=200)),
                ('port', models.PositiveIntegerField(help_text='TCP port number', validators=[django.core.validators.MinValueValidator(1024), django.core.validators.MaxValueValidator(49151)])),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gateways', to='api.site')),
            ],
            options={
                'db_table': 'leaky_feeder_gateway',
            },
        ),
        migrations.CreateModel(
            name='AlarmSnapshotItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, help_text='in seconds', null=True)),
                ('alarm_rule', models.IntegerField(choices=[(None, '(Unknown)'), (1, 'Calibration fault'), (2, 'Hardware fault'), (3, 'Environmental fault'), (4, 'I2C Bus fault'), (10, 'Line fault'), (20, 'RF over-drive fault'), (21, 'Network fault'), (22, 'AGC level fault'), (23, 'Pilot fault'), (24, 'POE fault')], verbose_name='Type of alarm')),
                ('severity', models.IntegerField(choices=[(None, '(Unknown)'), (1, 'Critical'), (2, 'Major'), (3, 'Minor')], verbose_name='Severity of alarm')),
                ('cause', models.IntegerField(choices=[(None, '(Unknown)'), (0, 'Lower gain limit reached'), (1, 'Upper gain limit reached'), (2, 'Weak beacon'), (3, 'I2C master lock up'), (4, 'Hardware revision unknown'), (5, 'Auxiliary board not found'), (6, 'Environmental sensor not found'), (7, 'Downlink radio not found'), (8, 'Uplink radio not found'), (9, 'Main NVS not found'), (10, 'WP NVS not found'), (11, 'MGC position out of range')], verbose_name='Problem source')),
                ('alarm_snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarms', to='api.alarmsnapshot')),
            ],
            options={
                'db_table': 'alarm_snapshot_item',
            },
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opened', models.DateTimeField(verbose_name='Alarm opened at')),
                ('resolved', models.DateTimeField(blank=True, null=True, verbose_name='Alarm closed at')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('source_key', models.CharField(blank=True, max_length=100, null=True)),
                ('alarm_rule', models.IntegerField(choices=[(None, '(Unknown)'), (1, 'Calibration fault'), (2, 'Hardware fault'), (3, 'Environmental fault'), (4, 'I2C Bus fault'), (10, 'Line fault'), (20, 'RF over-drive fault'), (21, 'Network fault'), (22, 'AGC level fault'), (23, 'Pilot fault'), (24, 'POE fault')], default=1, verbose_name='Type of alarm')),
                ('severity', models.IntegerField(choices=[(None, '(Unknown)'), (1, 'Critical'), (2, 'Major'), (3, 'Minor')], default=1, verbose_name='Severity of alarm')),
                ('ack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ack', to='api.acknowledgement')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='node', to='api.node')),
            ],
        ),
        migrations.AddField(
            model_name='acknowledgement',
            name='acknowledger',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.people'),
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.node')),
                ('hw_id', macaddress.fields.MACAddressField(integer=False, max_length=17, unique=True, verbose_name='Hardware id')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_heard', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('fw_version', models.CharField(blank=True, max_length=20, null=True, verbose_name='Firmware version')),
                ('hw_revision', models.CharField(blank=True, max_length=1, null=True, verbose_name='Hardware revision')),
                ('aux_board_revision', models.CharField(blank=True, max_length=1, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=10, null=True)),
                ('product_id', models.CharField(blank=True, max_length=20, null=True)),
                ('device_type', models.IntegerField(blank=True, choices=[(None, '(Unknown)'), (1, 'LineAmp'), (2, 'Gain management controller'), (3, 'QuadPort 2')], null=True)),
                ('aux_board_type', models.IntegerField(blank=True, choices=[(None, '(Unknown)'), (1, 'LED'), (2, 'EOC_1C_4G'), (4, 'EOC_2C_4G'), (6, 'EOC_1C_2G'), (8, 'EOC_2C_2G')], null=True)),
                ('status', models.IntegerField(blank=True, choices=[(None, '(Unknown)'), (1, 'Discovered'), (2, 'Commissioned'), (3, 'Archived'), (4, 'Ignored')], null=True)),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='api.leakyfeedergateway')),
            ],
            bases=('api.node',),
        ),
        migrations.AddField(
            model_name='alarmsnapshot',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alarm_snapshots', to='api.device'),
        ),
    ]
